{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","renderList","getState","_","uniq","forEach","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"iRAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yCCQAC,EAAa,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACRC,EAAgBC,IAAI,WADZ,OACzBC,EADyB,OAG/BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHnB,2CAAN,uDAMbC,EAAY,SAACC,GAAD,8CAAQ,WAAOT,GAAP,eAAAC,EAAA,sEACTC,EAAgBC,IAAhB,iBAA8BM,IADrB,OAC1BL,EAD0B,OAGhCJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHjB,2CAAR,uDCdnBG,E,uKACQ,IACEC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAKD,yBAAKG,UAAU,UAAUH,EAAKI,MAJvB,S,GALMC,aAkBVC,eAJS,SAACC,EAAOC,GAC5B,MAAO,CAAER,KAAMO,EAAME,MAAMC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,EAASG,aAGlDL,CAA2BP,GCfpCa,E,kLAEJX,KAAKC,MAAMW,uB,mCAIX,OAAOZ,KAAKC,MAAMY,MAAMC,KAAI,SAACC,GAC5B,OACC,yBAAKb,UAAU,OAAOc,IAAKD,EAAKlB,IAC/B,uBAAGK,UAAU,mCACb,yBAAKA,UAAU,WACd,yBAAKA,UAAU,eACd,4BAAKa,EAAKE,OACV,2BAAIF,EAAKG,OAEQ,kBAAC,EAAD,CAAYR,OAAQK,EAAKL,gB,+BAQ/C,OAAO,yBAAKR,UAAU,2BAA2BF,KAAKmB,kB,GAvBjCf,aA+BRC,eAJS,SAACC,GACxB,MAAO,CAAEO,MAAOP,EAAMO,SAGiB,CAAED,mBFlCR,yDAAM,WAAOxB,EAAUgC,GAAjB,SAAA/B,EAAA,sEACjCD,EAASD,KADwB,OAGvBkC,IAAEC,KAAKD,IAAEP,IAAIM,IAAWP,MAAO,WAEvCU,SAAQ,SAAC1B,GAAD,OAAQT,EAASQ,EAAUC,OALJ,2CAAN,0DEkCnBQ,CAAiDM,GC1BjDa,EARI,WACf,OACI,yBAAKtB,UAAU,gBACX,kBAAC,EAAD,Q,QCFGuB,cAAgB,CAC3BZ,MCLW,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIoB,EAAW,uCACnC,OAAQA,EAAOjC,MACX,IAAK,cACD,OAAOiC,EAAOhC,QAClB,QACI,OAAOY,IDCfE,MENW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIoB,EAAW,uCACnC,OAAQA,EAAOjC,MACX,IAAK,aACD,MAAM,GAAN,mBAAWa,GAAX,CAAkBoB,EAAOhC,UAC7B,QACI,OAAOY,MCKbqB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.ae18d776.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n});","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n\tawait dispatch(fetchPosts());\r\n\r\n\tconst userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n\r\n\tuserIds.forEach((id) => dispatch(fetchUser(id)));\r\n};\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n\tconst response = await jsonPlaceholder.get('./posts');\r\n\r\n\tdispatch({ type: 'FETCH_POSTS', payload: response.data });\r\n};\r\n\r\nexport const fetchUser = (id) => async (dispatch) => {\r\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n\tdispatch({ type: 'FETCH_USER', payload: response.data });\r\n};\r\n\r\n/* export const fetchUser = (id) => (dispatch) => {\r\n\t_fetchUser(id, dispatch);\r\n};\r\n\r\nconst _fetchUser = _.memoize(async (id, dispatch) => {\r\n\tconst response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n\tdispatch({ type: 'FETCH_USER', payload: response.data });\r\n}); */\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends Component {\r\n    render() {\r\n        const { user } = this.props;\r\n\r\n        if (!user) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"header\">{user.name}</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId) };\r\n}\r\n\r\nexport default connect(mapStateToProps) ( UserHeader );","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../actions';\r\n\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends Component {\r\n\tcomponentDidMount () {\r\n\t\tthis.props.fetchPostsAndUsers();\r\n\t}\r\n\r\n\trenderList () {\r\n\t\treturn this.props.posts.map((post) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"item\" key={post.id}>\r\n\t\t\t\t\t<i className=\"large middle aligned icon user\" />\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\t<h2>{post.title}</h2>\r\n\t\t\t\t\t\t\t<p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn { posts: state.posts };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\r\n","import React from 'react'\r\nimport PostList from './PostList';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <PostList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n});","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USER':\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}